/* Реальный пример использования паттерна Observer
 * одель биржевых торгов. Пример сюда подходит очень хорошо,
 * так как в этом случае у нас как раз есть объект
 * наблюдения (курс валюты на бирже) и куча наблюдателей
 * в лице банков и частных брокеров.
 */

using ObserverRealExample;
using ObserverRealExample.Observers;

Stock stock = new Stock();

var bank = new Bank(stock);
var broker = new Broker(stock);

// имитация торгов
stock.Market();
// брокер прекращает наблюдать за торгами
broker.StopTrade();
// имитация торгов
stock.Market();

Console.ReadKey();

/* Как всё работает:
 * 1. Stock реализует интерфейс IObservable (наблюдаемый объект) —
 *    валютная биржа, за которой все следят.
 * 2. В Stock реализован метод Market() — он представляет сессию торгов,
 *    и внутри него вся информация о курсах заключена в объекте StockData.
 * 3. После торговой сессии происходит уведомление наблюдателей.
 * 4. Наблюдатели (Broker, Bank) реализуют интерфейс IObserver,
 *    метод Update() которого принимает некоторый объект
 *    (в данном случае StockData) в виде параметра. 
 * 5. В Broker также есть дополнительный метод StopTrade(),
 *    который позволяет отписаться от уведомлений и перестать быть наблюдателем.
 */